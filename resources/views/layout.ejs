<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="theme-color" content="#317EFB"/>
    <title>The D</title>
    <link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet">
    <link href='https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700&display=swap' rel="stylesheet">
    <link rel="stylesheet" href = "/css/app.css">
     <!-- aos css cdn link  -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.css">
    <!-- google fonts cdn link  -->
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@200;400;500&family=Roboto:wght@100;300;400;500&display=swap" rel="stylesheet">
    <!-- font awesome cdn link  -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css">
    <!--icons-->
    <link rel="manifest" href="/manifest.json">>
    <link rel="shortcut icon" href="../../public/img/favicon.ico"/>
    <link rel="apple-touch-icon" href="../../public/img/apple-touch-icon.png"/>
    <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
    <a href="https://www.flaticon.com/free-icons/ladoo" title="ladoo icons"></a>
   

    <!-- Include Firebase SDK -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js" target="_blank" rel="noreferrer noopener"></script>


    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bhai Bhai Sweets</title>

</head>

<body>
    <nav class="container mx-auto flex items-center justify-between py-4">
        <div>
            <ul class="flex items">
                <li><span><a href="/">Home</a></span></li>
            </ul>
        </div>
        <div>
            <ul class="flex items-center">
                <% if(user === "admin") { %>
                    <li class="ml-6"><a href="/admin/orders">Admin</a></li>
                    <% } else { %>
                    <li class="ml-6"><a href="/customer/orders">Kunde</a></li>
                    <% } %>
                <% if(user) { %>
                <li class="ml-6">
                    <form id="logout" action="/logout" method="POST">
                        <a onclick="document.getElementById('logout').submit()" href="#">Logout</a>
                    </form>
                </li>
                <% } else { %>
                <li class="ml-6"><a href="/login">Login</a></li>
                <% } %>
            </ul>
        </div>
    </nav>
    <%- body %>
    <footer>
        <button id="install-button" style="display: none;">Install App</button>
    </footer>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/js/app.js"></script>
    <script>
        if ('serviceWorker' in navigator) {
          navigator.serviceWorker.register('/service-worker.js')
            .then((registration) => {
              console.log('Service Worker registered with scope:', registration.scope);
            })
            .catch((error) => {
              console.error('Service Worker registration failed:', error);
            });
        }
    </script>
    <script>
    if ('Notification' in window) {
  Notification.requestPermission()
    .then(function (permission) {
      if (permission === 'granted') {
        navigator.serviceWorker.ready.then(function (registration) {
          return registration.pushManager.subscribe({
            userVisibleOnly: true,
            applicationServerKey: 'BHEk6XF74Wog4WnakolRs798bo9Sw0y5gj-5v9fnbRtmyXxXXlFQPWxhObZTp8ppqmtrheM6NUSrHKyNv_fqyAw' // Your server's public key
          });
        }).then(function (subscription) {
          // Extract the keys from the subscription
          const { endpoint, keys } = subscription.toJSON();

          // Send the subscription data to the server for storage
          sendSubscriptionToServer(endpoint, keys);
        }).catch(function (error) {
          console.error('Subscription failed:', error);
        });
      }
    })
    .catch(function (error) {
      console.error('Error requesting notification permission:', error);
    });
}

function sendSubscriptionToServer(endpoint, keys) {
  const subscriptionData = {
    endpoint,
    keys,
    // Add any additional user or order-related data if needed
  };

  // Send the subscription data to the server for storage
  fetch('/subscribe', {
    method: 'POST',
    body: JSON.stringify(subscriptionData),
    headers: {
      'Content-Type': 'application/json'
    }
  })
    .then(function (response) {
      console.log('subscription saved')
    })
    .catch(function (error) {
      console.error('Error saving subscription data:', error);
    });
}

function sendPushNotification() {
  // Fetch the /send-notification endpoint to trigger the push notification
  fetch('/send-notification', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    }
  })
    .then(function (response) {
      if (response.status === 200) {
        console.log('Push notification sent successfully');
      } else {
        console.error('Failed to send push notification:', response.statusText);
      }
    })
    .catch(function (error) {
      console.error('Error sending push notification:', error);
    });
}

    </script>
    
      
  
</body>

</html>